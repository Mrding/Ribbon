<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
    xmlns:inf="http://www.grandsys.com/luna"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon" >

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="22" />
            </Grid.ColumnDefinitions>
            <Border x:Name="OuterBorder" BorderBrush="Transparent"  CornerRadius="0" BorderThickness="1,1,1,1" Background="Transparent" Grid.ColumnSpan="2"/>
            <!--<Border  Margin="1,1,1,1" BorderBrush="Gray" CornerRadius="0" BorderThickness="0" Background="White" Grid.Column="0" />-->
            <Path Data="M0,0L4,4 8,0z"  HorizontalAlignment="Center" Fill="LightGray" Name="Arrow" VerticalAlignment="Center" Width="8" Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="gray"/>
                <Setter Property="Background" TargetName="OuterBorder" Value="White"/>
                <Setter Property="Fill" TargetName="Arrow" Value="gray"/>
                <Setter Property="Cursor" TargetName="OuterBorder" Value="Hand"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="lightGray"/>
                <Setter Property="Background" TargetName="OuterBorder" Value="White"/>
                <Setter Property="BorderThickness" TargetName="OuterBorder" Value="1,1,1,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Border.BorderBrush" TargetName="OuterBorder" Value="lightGray"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="lightgray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextElement.Foreground"  Value="Black"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ComboBoxItemBorder"  SnapsToDevicePixels="True" Padding="8" Cursor="Hand" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition  Width="*" MinWidth="9"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="0,0,5,0" VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                  Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Stretch"/>
                            <Ellipse Grid.Column="1"  x:Name="HighLight" Height="6" Width="6" Fill="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                          
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                            <Setter Property="Fill" TargetName="HighLight" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                            <Setter Property="Fill" TargetName="HighLight" Value="#FF16A3E8"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="TextOnlyComboBoxstyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="Text" Value="Text"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="22"/>
                        </Grid.ColumnDefinitions>

                     

                        <ToggleButton Grid.ColumnSpan="3" ClickMode="Release" Name="ToggleButton" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                          Focusable="False" 
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <TextBlock x:Name="DescribedText" Margin="11 5 0 5"  HorizontalAlignment="Stretch" VerticalAlignment="Top" Focusable="True" TextAlignment="Left"
                                       Text="{TemplateBinding Text}" IsHitTestVisible="False" Visibility="Visible"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" IsHitTestVisible="False" Text="Schedules" Margin="5 0 0 0"/>

                        <Popup Placement="RelativePoint" Name="Popup" Focusable="False" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Fade">
                            <Border CornerRadius="0" Padding="0" Name="DropDown" SnapsToDevicePixels="True" BorderBrush="LightGray"  BorderThickness="1,1,1,1"  Background="White"
                                 MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <UniformGrid Columns="1" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Border>
                        </Popup>
                    </Grid>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>