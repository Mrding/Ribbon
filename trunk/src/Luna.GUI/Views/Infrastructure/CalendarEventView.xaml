<Window xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
        xmlns:cal="http://www.caliburnproject.org" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:Behaviors="clr-namespace:Luna.WPF.ApplicationFramework.Behaviors;assembly=Luna.WPF.ApplicationFramework" 
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        x:Class="Luna.GUI.Views.Infrastructure.CalendarEventView" 
        xmlns:domain="http://www.grandsys.com/luna/domain"
        xmlns:inf="http://www.grandsys.com/luna"        
        Height="617" Width="1006"
        Style="{StaticResource DefaultWindowStyle}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <inf:BlendMergedDictionary Source="pack://application:,,,/Resources/ApplicationResource.xaml"/>
                <inf:BlendMergedDictionary Source="/Luna.GUI;Component/Resources/ApplicationStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CalendarViewTitleBarStyle1" TargetType="{x:Type editors:CalendarViewTitleBar}">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=CalendarTitleBarBackgroundBrush, TypeInTargetAssembly={x:Type editors:MonthCalendar}}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=CalendarTitleBarBorderBrush, TypeInTargetAssembly={x:Type editors:MonthCalendar}}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=CalendarTitleBarForegroundBrush, TypeInTargetAssembly={x:Type editors:MonthCalendar}}}"/>
                <Setter Property="Padding" Value="{DynamicResource {ComponentResourceKey ResourceId=CalendarTitleBarPadding, TypeInTargetAssembly={x:Type editors:MonthCalendar}}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editors:CalendarViewTitleBar}">
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent">
                                <Grid Margin="{TemplateBinding Padding}" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <editors:CalendarButton Grid.Column="0" Focusable="False" HorizontalAlignment="Center" Margin="5 0 0 0"
                                                        Style="{TemplateBinding PreviousViewButtonStyle}" Command="{x:Static editors:CalendarCommands.GoToPreviousView}" VerticalAlignment="Center">
                                        <editors:CalendarButton.Visibility>
                                            <Binding Path="AreSmallChangeButtonsVisible" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </editors:CalendarButton.Visibility>
                                        <editors:CalendarButton.RenderTransform>
                                            <ScaleTransform CenterX="14" CenterY="14" ScaleX="1.3" ScaleY="1.3" />
                                            </editors:CalendarButton.RenderTransform>
                                    </editors:CalendarButton>

                                    <!--<editors:CalendarButton ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                                        Grid.Column="2" Focusable="False" Foreground="#FF7C93D7" FontSize="14"
                                                        Command="{x:Static editors:CalendarCommands.ZoomOut}" VerticalAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left">
                                </editors:CalendarButton>-->

                                    <editors:CalendarButton Margin="5,0,0,0" Grid.Column="1" Focusable="False" HorizontalAlignment="Center" Style="{TemplateBinding NextViewButtonStyle}" Command="{x:Static editors:CalendarCommands.GoToNextView}" VerticalAlignment="Center">
                                        <editors:CalendarButton.Visibility>
                                            <Binding Path="AreSmallChangeButtonsVisible" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </editors:CalendarButton.Visibility>
                                    </editors:CalendarButton>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CalendarListBoxItem" TargetType="ListBoxItem">
                <Setter Property="IsHitTestVisible" Value="false"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            
                                <!--<Rectangle x:Name="hoverFillColor" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Fill="Transparent"/>
                            <Rectangle x:Name="selectedFillColor" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Fill="Transparent"/>-->
                                <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}"
                                                 ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                >                                 
                                </ContentControl>
                          
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="hoverFillColor" Value="{StaticResource HighlightLightBrush}"/>
                            </Trigger>-->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" TargetName="contentControl" Value="Black"/>
                                </MultiTrigger>

                                <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="selectedFillColor" Value="#FFD8D8D9"/>
                            </MultiTrigger>-->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="contentControl" Value="0.5"/>
                                </Trigger>
                                <!--<Trigger Property="IsFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualElement" Value="1"/>
                        </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type domain:DaylightSavingTime}">                
            </DataTemplate>
            <DataTemplate DataType="{x:Type domain:Holiday}">
                <TextBlock Margin="8 5 0 2" Text="{Binding EventName}" Visibility="{Binding IsWeekendHoliday,Converter={StaticResource InversionOfBooleanToVisibilityConverter}}"/>               
            </DataTemplate>
            <Style TargetType="{x:Type editors:CalendarView}">                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editors:CalendarView}">
                            <Grid x:Name="grid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="15"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>                              
                                <shared:TransitionPresenter x:Name="transitionPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                            Grid.Row="1" TransitionSelector="{TemplateBinding TransitionSelector}" Margin="20 15 10 5">
                                    <shared:TransitionPresenter.Resources>
                                        <Style TargetType="Border">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Style>
                                    </shared:TransitionPresenter.Resources>
                                </shared:TransitionPresenter>
                                <editors:CalendarViewTitleBar Grid.RowSpan="2" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource CalendarViewTitleBarStyle1}">
                                    <editors:CalendarViewTitleBar.ContentTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
                                        </DataTemplate>
                                    </editors:CalendarViewTitleBar.ContentTemplate>
                                </editors:CalendarViewTitleBar>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsTransitioning" SourceName="transitionPresenter" Value="True">
                                    <Setter Property="editors:MonthCalendar.AreTransitionAnimationsEnabled" TargetName="transitionPresenter" Value="False"/>
                                </Trigger>
                                <Trigger Property="ActiveViewMode" Value="Year">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <editors:YearView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ActiveViewMode" Value="Decade">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <editors:DecadeView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ActiveViewMode" Value="Century">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <editors:CenturyView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ZoomInTransition">
                    <Setter.Value>
                        <shared:FadedZoomTransition Duration="0:0:0.3" Mode="In"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="ZoomOutTransition">
                    <Setter.Value>
                        <shared:FadedZoomTransition Duration="0:0:0.3" Mode="Out"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <editors:MonthView />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MonthCalendarStyle" TargetType="{x:Type editors:MonthCalendar}">
                <Setter Property="AreTransitionAnimationsEnabled" Value="True"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
                <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Once"/>
                <Setter Property="ClearButtonContent" Value="Clear"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editors:MonthCalendar}">
                            <!--<Microsoft_Windows_Themes:ListBoxChrome BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="True">-->

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.RowSpan="2" Text="{Binding ActiveDate,StringFormat=\{0:MMMM\},FallbackValue=2011/8/10, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                           Margin=" 0 0 10 40" Foreground="#FFEFEFEF" FontSize="72"  VerticalAlignment="Bottom">
                                    <TextBlock.RenderTransform>
                                            <ScaleTransform CenterX="-100" CenterY="120" ScaleX="2" ScaleY="2" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <editors:CalendarView Grid.Column="0" Grid.RowSpan="2"/>
                                
                                <Rectangle Grid.RowSpan="2" Grid.Column="1" Margin="10 0"  Width="1" Fill="{StaticResource LargeVerticalSeparatorBrush}" />
                                <StackPanel Grid.Column="2">
                                    <Label Content="Location" />
                                    <ComboBox x:Name="Country" ItemsSource="{Binding Countries}" IsSynchronizedWithCurrentItem="true" DisplayMemberPath="DisplayName"/>
                                    <Label Content="TimeZone"/>
                                    <ComboBox ItemsSource="{Binding Countries/TimeZones}" SelectedItem="{Binding SelectedTimeZone, Mode=TwoWay}"
                                              />
                                    <StackPanel Orientation="Horizontal" Margin="0 10" HorizontalAlignment="Left" >
                                        <editors:CalendarTodayButton x:Name="CalendarTodayButton"  FontSize="16" Cursor="Hand" VerticalAlignment="Center"
                                                                 Style="{StaticResource TodayButtonStyle}"/>
                                        <TextBlock Text="{Binding Text,ElementName=CalendarTodayButton,StringFormat='{}Today {0}'}"  FontSize="16" Foreground="MediumAquamarine" VerticalAlignment="Center"/>
                                    </StackPanel>
                                           
                                    
                                </StackPanel>
                                <ListBox Grid.Row="1" Grid.Column="2" ItemsSource="{Binding AllEventsView}" Padding="0 0 0 0" Background="Transparent" BorderThickness="0" IsSynchronizedWithCurrentItem="True"
                                             Style="{StaticResource CustomListBoxStyle}" >
                                    <ListBox.Resources>
                                        <!--<DataTemplate DataType="{x:Type domain:DaylightSavingTime}">
                                                <TextBlock Text="{Binding}"/>
                                            </DataTemplate>-->
                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource NoRepeatButtonStyle}"/>
                                    </ListBox.Resources>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock x:Name="PART_Date" FontSize="16" Text="{Binding }">
                                                </TextBlock>
                                                <TextBlock Text="{Binding EventName}" />
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="false">
                                                    <Setter Property="Foreground" TargetName="PART_Date" Value="#FF24A7FF"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
                                            <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
                                            <Setter Property="Padding" Value="10"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="1"/>

                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <Rectangle x:Name="hoverFillColor" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Fill="Transparent"/>
                                                            <Rectangle x:Name="selectedFillColor" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Fill="Transparent"/>
                                                            <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}">
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="7"/>
                                                            </ContentControl>
                                                            <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Opacity="0"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Fill" TargetName="hoverFillColor" Value="{StaticResource HighlightLightBrush}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Fill" TargetName="hoverFillColor" Value="{StaticResource HighlightBrush}"/>
                                                                <Setter Property="Foreground" TargetName="contentControl" Value="#FFFFFFFF"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true"/>
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                                </MultiTrigger.Conditions>
                                                                <!--<Setter Property="Fill" TargetName="selectedFillColor" Value="#FFD8D8D9"/>-->
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Opacity" TargetName="contentControl" Value="0.5"/>
                                                            </Trigger>
                                                            <!--<Trigger Property="IsFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualElement" Value="1"/>
                        </Trigger>-->
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Grid>

                            <!--</Microsoft_Windows_Themes:ListBoxChrome>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type editors:DayItem}">
                <Setter Property="Content">
                    <Setter.Value>
                        <Binding ConverterParameter="{}{0:%d}" Path="Date" RelativeSource="{RelativeSource Self}">
                            <Binding.Converter>
                                <shared:StringFormatConverter IsNullAllowed="False"/>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>               
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type editors:DayItem}">

                            <Border x:Name="PART_Border" SnapsToDevicePixels="True" BorderThickness="0.5 0.5 0 0" BorderBrush="LightGray" 
                                    Background="{TemplateBinding Background}">
                                <Border.DataContext>
                                    <MultiBinding Converter="{StaticResource IndexToDateConverter}" ConverterParameter="{x:Type sys:DateTime}">
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType={x:Type editors:MonthCalendar}}" />
                                        <Binding Path="Date" RelativeSource="{RelativeSource AncestorType={x:Type editors:DayItem}}" />
                                    </MultiBinding>
                                </Border.DataContext>
                                <Grid>
                                    <Grid Width="15" x:Name="PART_Sun" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="0" Visibility="Collapsed">
                                        <Image Source="/Luna.GUI;component/Resources/Images/sun.png" />

                                    </Grid>
                                    <Rectangle x:Name="PART_FocusVerticalLine" Grid.RowSpan="2" Width="3" HorizontalAlignment="Right" 
                                               Fill="#FF51B2FF" SnapsToDevicePixels="True" Visibility="Collapsed"/>

                                    
                                    <shared:PixelSnapper>
                                        <TextBlock x:Name="PART_Date" Text="{TemplateBinding Content}" HorizontalAlignment="Right" Foreground="#FF333333" 
                                                   Margin="0 5 10 0" VerticalAlignment="Top" FontSize="14" FontFamily="Segoe UI" FontWeight="DemiBold"/>
                                    </shared:PixelSnapper>
                                  
                                   

                                    <ListBox x:Name="PART_EventList"  Margin="0 0 0 0" Grid.Row="1" Background="Transparent" IsSynchronizedWithCurrentItem="True"
                                                 ItemContainerStyle="{StaticResource ResourceKey=CalendarListBoxItem}"
                                                ItemsSource="{Binding Path=.}"        
                                                 BorderThickness="0" HorizontalContentAlignment="Stretch" BorderBrush="LightGray">                                       
                                    </ListBox>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=.DataContext.IsHolidayWeekend,ElementName=PART_Border}" Value="true">
                                    <Setter TargetName="PART_Date" Property="Foreground" Value="#FFFF9292"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=.DataContext.IsDaylightSavingDay,ElementName=PART_Border}" Value="true">
                                    <Setter TargetName="PART_Sun" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <Trigger Property="Grid.Column" Value="2">
                                    <Setter TargetName="PART_Border" Property="BorderThickness" Value="0 0.5 0 0"/>
                                </Trigger>                              
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <!--<Setter TargetName="PART_Date" Property="Foreground" Value="#FF51B2FF"/>-->
                                    <Setter Property="Visibility" TargetName="PART_FocusVerticalLine" Value="Visible"/>
                                </MultiTrigger>

                                <Trigger Property="IsOverflowItem" Value="True">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>

                                <Trigger Property="ContainsToday" Value="True">
                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=CalendarTodayBorderBrush, TypeInTargetAssembly={x:Type editors:MonthCalendar}}}"/>-->
                                    <!--<Setter TargetName="PART_Date" Property="Foreground"  Value="MediumAquamarine"/>-->
                                    <Setter Property="Visibility" TargetName="PART_FocusVerticalLine" Value="Visible"/>
                                    <Setter Property="Fill" TargetName="PART_FocusVerticalLine" Value="MediumAquamarine"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>        
        <editors:MonthCalendar Style="{StaticResource MonthCalendarStyle}" Behaviors:MonthCalendarBehavior.ActiveDate="{Binding ActiveTime,Mode=TwoWay,FallbackValue=2011/1/1}"
                               SelectedDate="{Binding ActiveTime,Mode=TwoWay,FallbackValue=2011/1/1}"
                               Behaviors:MonthCalendarBehavior.CalendarSource="{Binding DayItemsSource}"
                               NextViewButtonStyle="{StaticResource NavigateLeftButtonStyle}"
                               PreviousViewButtonStyle="{StaticResource NavigateRightButtonStyle}"
                               AreTransitionAnimationsEnabled="False"
          BorderThickness="0" Margin="0 10 10 10"  Padding="0"/>
        <Rectangle Width="10" Height="40" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 15">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.782,0.17" StartPoint="0.218,0.83">
                    <GradientStop Color="#FF0A9DFF" Offset="0"/>
                    <GradientStop Color="#FF45B5FF" Offset="1"/>
                    <GradientStop Color="#FF1CA3FE" Offset="0.449"/>
                    <GradientStop Color="#FF26A8FF" Offset="0.709"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <TextBlock Text="{Binding ActiveTime, StringFormat='{}{0:yyyy} Calendar Event',FallbackValue='2011 Calendar Event'}" 
                   IsHitTestVisible="False"
                   Style="{StaticResource HeaderTextStyle}" Foreground="#FF989898" Margin="20 -20 0 0" VerticalAlignment="Top"/>

        <UniformGrid Margin="0 0 0 10" Rows="1" HorizontalAlignment="Center" VerticalAlignment="Bottom"  ClipToBounds="False">
            <Button Content="Import" HorizontalAlignment="Center"  Style="{StaticResource ImportButtonStyle}" cal:Message.Attach="OpenImportView"/>
            <Button Content="Holiday" HorizontalAlignment="Center" Style="{StaticResource AddButtonStyle}" cal:Message.Attach="OpenAddHolidayDialog($dataContext)"/>
            <Button Content="Weekend" HorizontalAlignment="Center" Style="{StaticResource AddWeekendButtonStyle}" cal:Message.Attach="ApplyWeekendAsHoliday"/>            
            <Button Content="DST" HorizontalAlignment="Center" Style="{StaticResource AddButtonStyle}" cal:Message.Attach="OpenAddDstDialog($dataContext)"/>
            <Button Content="Delete" HorizontalAlignment="Center" Style="{StaticResource DeleteButtonStyle}" cal:Message.Attach="OpenDeleteDialog($dataContext)"/>
        </UniformGrid>
        <DockPanel HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="20,0,0,10">
            <TextBlock Foreground="Black"  Text="{Binding WorkingDays,FallbackValue=30}"/>
            <TextBlock Foreground="Black"  Margin="5,0,15,0" Text="WorkingDays"/>
            <TextBlock Foreground="Black"  Text="{Binding Holidays,FallbackValue=0}"/>
            <TextBlock Foreground="Black" Margin="5,0,15,0" Text="Holidays"/>
        </DockPanel>
    </Grid>
</Window>
