<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:uc="clr-namespace:Luna.GUI.UserControls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:inf="http://www.grandsys.com/luna"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
    xmlns:local="clr-namespace:Luna.GUI.Views.Infrastructure" 
    
	x:Class="Luna.GUI.Views.Infrastructure.LaborRuleDetailView"
    xmlns:domain="http://www.grandsys.com/luna/domain"
    xmlns:cal="http://www.caliburnproject.org" Margin="10">
    <UserControl.Resources>
        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Views/Administration/LaborRuleManageViewStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->

    </UserControl.Resources>
    <TabControl x:Name="_tabBasic" Padding="0"
                    Background="{DynamicResource {x:Static themes:RibbonCommonDictionary.TabContentBackgroundBrushKey}}" 
                    Foreground="{DynamicResource {x:Static themes:RibbonCommonDictionary.GroupLabelForegroundBrushKey}}">

        <TabItem Header="{inf:Resource Administration_LaborRuleDetails_BasicRule}">
            <TabItem.Resources>
                <Style x:Key="Category" TargetType="TextBlock" BasedOn="{StaticResource CategoryText}">
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="10 0"/>
                </Style>

                <Style x:Key="Line" TargetType="Border">
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="BorderThickness" Value="0 0.5 0 0"/>
                    <Setter Property="Margin" Value="10 15 10 10"/>
                </Style>
            </TabItem.Resources>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="300"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Style="{StaticResource Category}" Text="{inf:Resource Administration_BasicLaborRule_Name}"
                           Margin="10"/>
                <TextBox Grid.Column="1" Text="{Binding Entity.Name}" Margin="0 0 10 0" VerticalAlignment="Center"
                            Style="{DynamicResource {x:Static ribbon:RibbonStyles.TextBoxKey}}" ribbon:RibbonControlService.HintText="名稱"/>
                <Border Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource Line}"/>
                <TextBlock Grid.Row="2" Style="{StaticResource Category}" Text="{inf:Resource Shifts_AgentResources_DayWorkOff}"/>
                <Grid Grid.Row="2" Grid.Column="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock
                                Text="{Binding Entity.MCWD,Mode=OneWay,StringFormat={inf:Resource Shifts_AgentResources_MaxContinueWorkDay}}"/>
                    <Slider Grid.Column="1" Margin="5" x:Name="MCWD" Maximum="15" Minimum="2" 
                                    DataContext="{Binding Entity}" TickFrequency="1"                                  
                                    Value="{Binding MCWD,UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="{Binding Entity.MCDO,Mode=OneWay,StringFormat={inf:Resource Shifts_AgentResources_MaxContinueDayOff}}" Grid.Row="1"/>
                    <Slider Grid.Row="1" Grid.Column="1" Margin="5" x:Name="MCDO" Maximum="5" Minimum="2"
                                    DataContext="{Binding Entity}" TickFrequency="1"                              
                                    Value="{Binding MCDO,UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Border Grid.Row="3" Grid.ColumnSpan="2" Style="{StaticResource Line}"/>
                <TextBlock Grid.Row="4" Style="{StaticResource Category}" Text="{inf:Resource LaborHours}" />
                <StackPanel DataContext="{Binding Entity}" Grid.Row="4" Grid.Column="1" >
                    <!--<inf:TimeSpanEditor Value="100" Maximum="200" SmallChange="5"></inf:TimeSpanEditor>-->

                    <uc:TimeSpanEditor HorizontalAlignment="Stretch" DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_MinIdleGap}"
                                       Value="{Binding MinIdleGap,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />

                    <uc:TimeSpanEditor HorizontalAlignment="Stretch" DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_StdDailyLaborHour}"
                                       Value="{Binding StdDailyLaborHour,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />

                    <uc:TimeSpanEditor x:Name="maxTimeSpanEditor" DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_MaxLaborHour}"
                                       Minimum="{Binding Value,ElementName=minTimeSpanEditor}"
                                       Value="{Binding MaxLaborHour,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />

                    <uc:TimeSpanEditor x:Name="minTimeSpanEditor" DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_MinLaborHour}"
                                       Maximum="{Binding Value,ElementName=maxTimeSpanEditor}"
                                       Value="{Binding MinLaborHour,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />


                </StackPanel>
                <Border Grid.Row="5" Grid.ColumnSpan="2" Style="{StaticResource Line}"/>
                <TextBlock Grid.Row="6" Style="{StaticResource Category}" Text="{inf:Resource Shifts_AgentResources_Restriction}" />
                <StackPanel Grid.Row="6" Grid.Column="1" DataContext="{Binding Entity}">
                    <uc:TimeSpanEditor DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_MaxOvertimeThreshold}"
                                       Value="{Binding MaxOvertime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />

                    <uc:TimeSpanEditor DataContext="{Binding}" Header="{inf:Resource Shifts_AgentResources_MaxShrinkedThreshold}"
                                       Value="{Binding MaxShrinked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource TimeSpanToMinuteIntConverter}}" />

                    <DockPanel LastChildFill="True">

                        <TextBlock Text="{Binding MaxSwapTimes,Mode=OneWay,StringFormat={inf:Resource Shifts_AgentResources_MaxSwapTimes}}"/>
                        <Slider DockPanel.Dock="Right" Margin="5" Maximum="30"
                                    TickFrequency="1" x:Name="MaxSwapTimes"                          
                                    Value="{Binding MaxSwapTimes,UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>

                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="{inf:Resource Administration_LaborRuleDetails_DayOffRule}">
            <local:DayOffRuleView/>
        </TabItem>
        <TabItem Header="{inf:Resource Administration_LaborRuleDetails_DayOffMask}">
            <StackPanel Margin="10">
                <Label Padding="0">
                    <Label.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="5 3" Height="25"  Source="/Resources/Images/iCal7.png"/>
                            <TextBlock VerticalAlignment="Center"  Text="{inf:Resource Administration_DayOffMask_WeekOption}"/>
                        </StackPanel>
                    </Label.Content>
                </Label>
                <uc:CheckBoxList DataContext="{Binding Path=Entity.DayOffMask}"
                        ArrayInt="{Binding Weekdays,Mode=TwoWay}"
                        ItemsSource="{Binding WeekDayMask,Converter={StaticResource ArrayToCheckItemConverter}, ConverterParameter={x:Type sys:DayOfWeek}}"
                     />

                <Border Margin="0 10" BorderBrush="LightGray" BorderThickness="1" HorizontalAlignment="Left" >
                    <DockPanel LastChildFill="True">
                        <Label VerticalContentAlignment="Center" Padding="0" DockPanel.Dock="Top" Background="#FFE5E5E5">
                            <DockPanel>
                                <Image Margin="5 3" Height="25" Source="/Resources/Images/iCal.png"/>
                                <TextBlock VerticalAlignment="Center" Text="{inf:Resource Administration_DayOffMask_MonthOption}"/>
                            </DockPanel>
                        </Label>
                        <uc:CheckBoxList DataContext="{Binding Path=Entity.DayOffMask}"
                                ArrayInt="{Binding Monthdays,Mode=TwoWay}"
                                ItemsSource="{Binding MonthDayMask,Converter={StaticResource ArrayToCheckItemConverter}, ConverterParameter={x:Type domain:MonthDay}}"
                                />

                    </DockPanel>
                </Border>

            </StackPanel>
        </TabItem>
        <TabItem Header="{inf:Resource Administration_LaborRuleDetails_ShiftGroupRule}">
            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.RowSpan="3" BorderThickness="0 0 1 0" BorderBrush="DarkGray" Background="{StaticResource ListBoxContainerBackgroud}"/>

                <TextBlock Margin="0 10 20 10" FontSize="16" Text="班群組列表" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                <Grid Grid.Row="1" >
                    <ListBox x:Name="ShiftGroupList" ItemsSource="{Binding Entity.ShiftGroups}" 
                             IsSynchronizedWithCurrentItem="True" BorderThickness="0" Background="Transparent"
                             ItemContainerStyle="{StaticResource FlatStyleListBoxItem}"
                             Style="{StaticResource CustomListBoxStyle}">
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Margin" Value="0,0,0,5" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <StackPanel>
                                                        <ContentPresenter/>
                                                        <ItemsPresenter/>
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="6">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Button Style="{StaticResource IconButton}" Grid.Column="0"
                                                cal:Action.TargetWithoutContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}}}"
                                                cal:Message.Attach="AddShiftGroup($dataContext.Items)">
                                                <Image Source="/Resources/Images/add.png"/>
                                            </Button>
                                            <TextBlock Margin="5 0" Style="{StaticResource CategoryText}" Text="{Binding Name}" 
                                                       Grid.Column="1"/>
                                            <Border Style="{StaticResource CategoryLine}" Grid.Column="2"/>
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>

                            </GroupStyle>
                        </ListBox.GroupStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Margin="0" Grid.Column="0" 
                                        x:Name="DeleteButton"
                                                cal:Action.TargetWithoutContext="{Binding DataContext,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBox}}}"
                                                cal:Message.Attach="[Action RemoveShiftGroup($dataContext)]"
                                                VerticalAlignment="Center" Style="{StaticResource IconButton}">
                                        <Image Source="/Resources/Images/delete3.png"/>
                                    </Button>
                                    <Button Margin="5 0" Grid.Column="1" x:Name="ChangeGroupButton" 
                                                cal:Action.TargetWithoutContext="{Binding DataContext,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBox}}}"
                                                cal:Message.Attach="[Action ChangeShiftGroupOrdering($dataContext)]"
                                                VerticalAlignment="Center" Style="{StaticResource IconButton}">
                                        <Image>
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Source" Value="/Resources/Images/up1.png"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Index}" Value="-1">
                                                            <Setter Property="Source" Value="/Resources/Images/down1.png"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Button>
                                    <TextBlock Text="{Binding Path=Name}" Grid.Column="2" HorizontalAlignment="Right" Margin="0 0 10 0"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="false">
                                        <Setter TargetName="DeleteButton" Property="Visibility" Value="Hidden"/>
                                        <Setter TargetName="ChangeGroupButton" Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Style="{StaticResource IconButton}" VerticalAlignment="Center" HorizontalAlignment="Center"
                            cal:Action.TargetWithoutContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}}}"
                            cal:Message.Attach="AddShiftGroup('')"
                            Visibility="{Binding HasItems,ElementName=ShiftGroupList,Converter={StaticResource InversionOfBooleanToVisibilityConverter}}">
                        <Image Source="/Resources/Images/add.png"/>
                    </Button>
                </Grid>


                <uc:OrderingItemsButtons TargetElement="{Binding ElementName=ShiftGroupList}" Grid.Row="2"/>

                <Grid Grid.RowSpan="3" Grid.Column="1" Margin="10" HorizontalAlignment="Left"
                      Visibility="{Binding SelectedItem,ElementName=ShiftGroupList,Mode=OneWay,Converter={StaticResource NullToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="190"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBox Margin="0 10 0 0" Text="{Binding Entity.ShiftGroups/Name}" VerticalAlignment="Center"
                             Style="{DynamicResource {x:Static ribbon:RibbonStyles.TextBoxKey}}" ribbon:RibbonControlService.HintText="群組名稱"/>
                    <Border Grid.Row="1" Margin="0 10" BorderBrush="LightGray" BorderThickness="0 0.5 0 0" Grid.ColumnSpan="2"/>

                    <Grid HorizontalAlignment="Left" Grid.Row="2" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <CheckBox Margin="0 10" Padding="0" Grid.Row="0" Style="{StaticResource SimpleCheckedStyle}" IsChecked="{Binding Path=Entity.ShiftGroups/IsOneAssignmentTypeOnly}" Content="{inf:Resource Administration_ShiftGroup_ChooseOneShift}" HorizontalAlignment="Left"/>
                        <DockPanel LastChildFill="True" Grid.Row="1">
                            <shared:PopupButton Padding="2 0 2 0" DockPanel.Dock="Right"
                                DataContext="{Binding}" 
								Margin="5" HorizontalAlignment="Right" IsRounded="False" IsTransparencyModeEnabled="True">
                                <shared:PopupButton.Content>
                                    <Image Height="16" Width="16" Source="/Resources/Images/filter.png"/>
                                </shared:PopupButton.Content>
                                <shared:PopupButton.PopupMenu>
                                    <ContextMenu>
                                        <MenuItem Header="選中" cal:Message.Attach="Search('AssignmentType',$dataContext.AssignmentTypes,'IsSelected', 'true')"
                                          DataContext="{Binding PlacementTarget.DataContext/, Converter={StaticResource DebugConverter} ,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ContextMenu}}}"/>
                                        <MenuItem Header="未選中" 
                                          cal:Message.Attach="Search('AssignmentType',$dataContext.AssignmentTypes,'IsSelected', 'false')" 
                                          DataContext="{Binding PlacementTarget.DataContext/,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ContextMenu}}}" />
                                        <MenuItem Header="全部" 
                                          cal:Message.Attach="Search('AssignmentType',$dataContext.AssignmentTypes,'IsSelected', '')" 
                                          DataContext="{Binding PlacementTarget.DataContext/,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ContextMenu}}}" />
                                    </ContextMenu>
                                </shared:PopupButton.PopupMenu>
                            </shared:PopupButton>
                            
                            <!--New SearchBox-->
                            <!--<TextBox  BorderThickness="1" Style="{StaticResource SearchTextBoxStyle}"
                                                          Focusable="True" ribbon:RibbonControlService.HintText="班名查詢">
                                <i:Interaction.Behaviors>
                                    <inf:SelectorHighLightBehavior FilterPath="Kind.Text" Selector="{Binding ElementName=PART_Value}"/>
                                </i:Interaction.Behaviors>
                            </TextBox>-->

                            <!--Old SearchBox-->
                            <!--<uc:SearchTextBox VerticalAlignment="Center"
                              DataContext="{Binding AssignmentTypes}" HintText="班名查詢"
                                  cal:Message.Attach="[Event TextChanged] = [Action Search('AssignmentType',$dataContext, 'NameSearch', $source)]"/>-->
                        </DockPanel>
                        <ListBox Grid.Row="2" ItemsSource="{Binding AssignmentTypes}" BorderThickness="0">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="{Binding IsSelected,Mode=TwoWay}">
                                        </CheckBox>
                                        <TextBlock Text="{Binding Entity.Name}" TextAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>

                    <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" 
                                Visibility="{Binding Entity.ShiftGroups/Index,Converter={StaticResource ValueNotEqualsToVisibilityConverter},ConverterParameter=-1}">
                        <Grid Margin="10" DataContext="{Binding Entity.ShiftGroups/}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{inf:Resource Administration_ShiftGroup_ShiftGroupCountMinimum}" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right" Margin="0 5"/>

                            <uc:RangeEditBox Grid.Column="1" Grid.Row="0" Min="0" Max="42"
                                         StartValue="{Binding MinGroupTimes,UpdateSourceTrigger=PropertyChanged}" 
                                         EndValue="{Binding MaxGroupTimes,UpdateSourceTrigger=PropertyChanged}"/>


                            <TextBlock Text="{inf:Resource Administration_ShiftGroup_SequShiftGroupCountMinimum}" Grid.Row="1"
                                       VerticalAlignment="Center" Margin="0 5"
                                       HorizontalAlignment="Right"/>

                            <uc:RangeEditBox Grid.Column="1" Grid.Row="1" Min="0" Max="42"
                                         StartValue="{Binding MinContinueGroupTimes,UpdateSourceTrigger=PropertyChanged}" 
                                         EndValue="{Binding MaxContinueGroupTimes,UpdateSourceTrigger=PropertyChanged}"/>

                        </Grid>
                        <StackPanel Margin="10 0">
                            <Label Padding="0">
                                <Label.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="5 3" Height="25"  Source="/Resources/Images/iCal7.png"/>
                                        <TextBlock VerticalAlignment="Center"  Text="{inf:Resource Administration_DayOffMask_WeekOption}"/>
                                    </StackPanel>
                                </Label.Content>
                            </Label>
                            <uc:CheckBoxList DataContext="{Binding Path=Entity.ShiftGroups/}"
                                ArrayInt="{Binding WorkingDayMask.Weekdays,Mode=TwoWay}"
                                ItemsSource="{Binding WorkingDayMask.WeekDayMask,Converter={StaticResource ArrayToCheckItemConverter}, ConverterParameter={x:Type sys:DayOfWeek}}"
                                ItemTemplate="{StaticResource DateCheckedDataTemplate}"/>

                            <Border Margin="0 10" BorderBrush="LightGray" BorderThickness="1" HorizontalAlignment="Left" >
                                <DockPanel LastChildFill="True">
                                    <Label VerticalContentAlignment="Center" Padding="0" DockPanel.Dock="Top" Background="#FFE5E5E5"
                                            >
                                        <DockPanel>
                                            <Image Margin="5 3" Height="25" Source="/Resources/Images/iCal.png"/>
                                            <TextBlock VerticalAlignment="Center" Text="{inf:Resource Administration_DayOffMask_MonthOption}"/>
                                        </DockPanel>
                                    </Label>
                                    <uc:CheckBoxList DataContext="{Binding Path=Entity.ShiftGroups/}"
                                ArrayInt="{Binding WorkingDayMask.Monthdays,Mode=TwoWay}"
                                ItemsSource="{Binding WorkingDayMask.MonthDayMask,Converter={StaticResource ArrayToCheckItemConverter}, ConverterParameter={x:Type domain:MonthDay}}"
                                ItemTemplate="{StaticResource DateCheckedDataTemplate}"/>

                                </DockPanel>

                            </Border>


                        </StackPanel>
                    </StackPanel>
                </Grid>

            </Grid>
        </TabItem>
        <TabItem Header="{inf:Resource Administration_LaborRuleDetails_GroupByShift}">
            <local:GroupByShiftView />
        </TabItem>
        <!--<TabItem Header="{inf:Resource Administration_LaborRuleDetails_SelectedEmp}">
            <local:SelectedEmpView IsEnabled="{Binding Entity.IsNew,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BooleanInverseConverter}}" />
        </TabItem>-->
    </TabControl>
</UserControl>
