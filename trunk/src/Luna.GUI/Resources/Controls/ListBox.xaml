<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
                     xmlns:inf="http://www.grandsys.com/luna"
                     xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"   
                    xmlns:uc="clr-namespace:Luna.GUI.UserControls"
                    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon" 
                    xmlns:presentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:cal="clr-namespace:Caliburn.PresentationFramework;assembly=Caliburn.PresentationFramework">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Border.xaml"/>
        <ResourceDictionary Source="/Luna.GUI;Component/Resources/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="ListBoxContainerBackgroud" StartPoint="-0.00377791,0.5" EndPoint="1.00378,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF8F9FB" Offset="0"/>
            <GradientStop Color="#FFF6F8F9" Offset="0.448276"/>
            <GradientStop Color="#FFF6F8F9" Offset="0.913793"/>
            <GradientStop Color="#FFDFE4E9" Offset="0.991379"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="CustomListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CanSearchListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">

                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <Grid>
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0 30 0 0"/>
                            </ScrollViewer>
                            <!--<Rectangle Height="40" VerticalAlignment="Top" Margin="0 0 17 0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1.151" StartPoint="0.5,0.071">

                                        <GradientStop Color="White"/>
                                        <GradientStop Color="White" Offset="0.626"/>
                                        <GradientStop Color="Transparent" Offset="0.843"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>-->
                            <!--<uc:SearchTextBox Height="25" BorderThickness="1" 
                                             
                          DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="True" 
                          HintText="Search">
                                <i:Interaction.Behaviors>
                                    <inf:SelectorHighLightBehavior FilterPath="Entity.Name" Selector="{Binding ElementName=ItemList}" />
                                </i:Interaction.Behaviors>
                            </uc:SearchTextBox>-->

                            <TextBox DockPanel.Dock="Top" BorderThickness="1" Margin="0 0 17 0" VerticalAlignment="Top"
                                                         Style="{DynamicResource SearchTextBoxStyle}"
                                                       Background="White"
                                                         ribbon:RibbonControlService.HintText="{inf:Resource Infrastructure_AgentFinder_EnterShiftName}">
                                <i:Interaction.Behaviors>
                                    <inf:SelectorHighLightBehavior FilterPath="Entity.Name" Selector="{Binding ElementName=ItemList}" />
                                </i:Interaction.Behaviors>
                            </TextBox>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoFrameListContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter x:Name="PART_Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectableSupportContainerStyle" TargetType="{x:Type ListBoxItem}">

        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>

    </Style>

    <Style x:Key="ListContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="IsEnabled" Value="{Binding IsActivated,Mode=OneWay}"/>-->
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <!--<Setter Property="RenderTransformOrigin" Value="0,0.5" />-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd" Style="{StaticResource SeatBorder}"                            
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Margin="{TemplateBinding Margin}"
                            Padding="0"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="PART_Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActivated}" Value="false">
                            <Setter TargetName="Bd" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation 
                  Storyboard.TargetProperty="LayoutTransform.ScaleX"
                  To="1.1" Duration="0:0:0.1"  />
                            <DoubleAnimation 
                  Storyboard.TargetProperty="LayoutTransform.ScaleY"
                  To="1.1" Duration="0:0:0.1"  />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation 
                  Storyboard.TargetProperty="LayoutTransform.ScaleX"
                  To="1" Duration="0:0:0.2" />
                            <DoubleAnimation 
                  Storyboard.TargetProperty="LayoutTransform.ScaleY"
                  To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>-->
    </Style>


    <Style x:Key="RibbonListBoxItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="OuterBorder" Margin="2,0,2,0" BorderThickness="1" CornerRadius="3" BorderBrush="Transparent" Background="Transparent">
                        <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="2" BorderBrush="Transparent" Background="Transparent">
                            <ContentPresenter x:Name="Content" Margin="2,0,2,0" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Content" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlLargeBackgroundHoverBrushKey}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlOuterBorderSelectedBrushKey}}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlLargeBackgroundSelectedBrushKey}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlInnerBorderSelectedBrushKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlOuterBorderHoverSelectedBrushKey}}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlLargeBackgroundHoverSelectedBrushKey}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:RibbonCommonDictionary.RibbonControlInnerBorderHoverSelectedBrushKey}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Backstage List Style-->
    <Style x:Key="FlatStyleListBoxItem" TargetType="ListBoxItem">
        <Setter Property="inf:ItemsElementBehavior.IsBroughtIntoViewWhenSelected" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="OuterBorder" Background="Transparent">
                        <Grid>
                            <Path x:Name="Arrow" Width="12" Height="24" Visibility="Collapsed" Stretch="Fill" Fill="White" Data="F1 M 279.479,293.023L 501.525,70.9775L 501.525,515.068L 279.479,293.023 Z " 
                                HorizontalAlignment="Right" Margin="0 0 -2 0" VerticalAlignment="Center"/>
                            <Border Margin="5" x:Name="InnerBorder" CornerRadius="2" Background="Transparent">
                                <ContentPresenter x:Name="Content" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1 1" />
                            <!--<Setter TargetName="Arrow" Property="Visibility" Value="Visible" />-->
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF8FAAD9" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="#FFBBCEE9" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoStyleBoxItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter x:Name="Content" Margin="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="ListBoxItem" BasedOn="{StaticResource RibbonListBoxItem}"/>-->

</ResourceDictionary>
