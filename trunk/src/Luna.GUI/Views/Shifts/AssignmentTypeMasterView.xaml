<Window x:Class="Luna.GUI.Views.Shifts.AssignmentTypeMasterView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:uc="clr-namespace:Luna.GUI.UserControls"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:inf="http://www.grandsys.com/luna"
    xmlns:local="clr-namespace:Luna.GUI.Views.Shifts"  
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes" 
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"   
    xmlns:behaviors="clr-namespace:Luna.WPF.ApplicationFramework.Behaviors;assembly=Luna.WPF.ApplicationFramework" 
     WindowStartupLocation="CenterScreen"      
    Height="600" Width="870" Style="{StaticResource DefaultWindowStyle}"
    Background="White">
    <!--Properties-->
    <!--Title="{inf:Resource Shifts_AssignmentTypeMaster_Title}"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <inf:BlendMergedDictionary Source="pack://application:,,,/Resources/ApplicationResource.xaml"/>
                <inf:BlendMergedDictionary Source="/Luna.GUI;Component/Resources/ApplicationStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>


          
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="0 0 15 0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="210" Width="auto"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="Assignment Type" Style="{StaticResource HeaderTextStyle}" Foreground="#FF989898" Margin="20 -20 0 0" VerticalAlignment="Top"/>
        <Rectangle Width="10" Height="40" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 15">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.782,0.17" StartPoint="0.218,0.83">
                    <GradientStop Color="#FF0A9DFF" Offset="0"/>
                    <GradientStop Color="#FF45B5FF" Offset="1"/>
                    <GradientStop Color="#FF1CA3FE" Offset="0.449"/>
                    <GradientStop Color="#FF26A8FF" Offset="0.709"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        
        <Border Margin="20 30 10 10">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="1 5 0 0">
                    <ribbon:Button ImageSourceSmall="/Resources/Images/Add16.png" 
                                   cal:Message.Attach="[Event Click] = [Action OpenNew($dataContext)]"/>
                    <ribbon:Button ImageSourceSmall="/Resources/Images/Remove16.png" 
                                   cal:Message.Attach="[Event Click] = [Action Delete()]"/>

                    <ribbon:PopupButton ImageSourceSmall="/Resources/Images/Gear16.png" VerticalAlignment="Center">
                        <ribbon:Menu>
                            <ribbon:Button Label="Rename Type" cal:Message.Attach="[Event Click] = [Action OpenRename($dataContext)]"/>
                            <ribbon:Button DataContext="{Binding Path=.CollectionView/Entity}" cal:Message.Attach="[Event Click] = [Action ChangeInUseStatus()]">
                                <ribbon:Button.Style>
                                    <Style TargetType="ribbon:Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding InUse}" Value="true">
                                                <Setter Property="Label" Value="Make Type Inactive"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding InUse}" Value="false">
                                                <Setter Property="Label" Value="Activate Type"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ribbon:Button.Style>
                            </ribbon:Button>
                            <ribbon:Button Label="Duplicate Type" cal:Message.Attach="[Event Click] = [Action OpenSaveAsNew($dataContext)]"/>
                        </ribbon:Menu>
                    </ribbon:PopupButton>

                </StackPanel>                
                <ListBox x:Name="ItemList" BorderThickness="0" ItemsSource="{Binding CollectionView}" Loaded="ItemList_Loaded"
                     ScrollViewer.VerticalScrollBarVisibility="Visible" Padding="0 2 0 0" IsSynchronizedWithCurrentItem="True"
                     Background="Transparent"
                     SelectedItem="{Binding CurrentPresenter}"
                     Style="{StaticResource CanSearchListBoxStyle}">
                    <ListBox.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource NoRepeatButtonStyle}"/>
                    </ListBox.Resources>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem"  BasedOn="{StaticResource DefaultListBoxItemStyle}">
                            <!--<Setter Property="inf:ItemsElementBehavior.IsBroughtIntoViewWhenSelected" Value="True"/>
                            <Setter Property="IsSelected" Value="{Binding Path=Entity.IsSelected, Mode=TwoWay}"/>-->
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate >
                            <StackPanel Orientation="Horizontal" Margin="2,0,0,0">
                                <TextBlock Text="{Binding Entity.Name}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Entity.InUse}" Value="false">
                                                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="*" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Entity.IsNew}" Value="false"/>
                                                            <Condition Binding="{Binding Entity.IsEditing}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Margin" Value="0,0,0,5"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" Focusable="False" FocusVisualStyle="{x:Null}">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Name}" Margin="5" FontSize="14" VerticalAlignment="Center"/>
                                                            <TextBlock VerticalAlignment="Top" FontWeight="Bold" FontSize="12" Text="{Binding Path=ItemCount}"/>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <ItemsPresenter/>
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                </ListBox>
            </DockPanel>
        </Border>

        <Grid Margin="0 30 0 60" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Background="White">
                <TextBlock Text="Not found" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>

            <!--<local:AssignmentTypeDetailView DataContext="{Binding}" Visibility="{Binding CurrentPresenter,Converter={StaticResource NullToVisibilityConverter}}"/>-->
            <ContentControl Content="{Binding}" x:Name="Element_CurrentPresenter">
                <ContentControl.ContentTemplate>
                    <DataTemplate>
                        <local:AssignmentTypeDetailView/>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentPresenter}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>

        <Border Grid.Column="1" VerticalAlignment="Bottom" Margin="0 0 0 10" >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button Style="{StaticResource DefaultButtonStyle}" Content="Cancel" VerticalAlignment="Center" Width="120" Margin="0 0 20 0" cal:Message.Attach="Cancel"/>
                <Button Style="{StaticResource DefaultButtonStyle}" Content="Save" VerticalAlignment="Center" Width="120" cal:Message.Attach="Save"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
