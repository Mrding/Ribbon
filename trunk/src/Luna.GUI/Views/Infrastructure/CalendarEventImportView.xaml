<Window x:Class="Luna.GUI.Views.Infrastructure.CalendarEventImportView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:inf="http://www.grandsys.com/luna" 
        xmlns:cal="http://www.caliburnproject.org" 
        xmlns:Domain="clr-namespace:Luna.Infrastructure.Domain;assembly=Luna.Infrastructure.Domain"
        Title="CalendarEventImportView"
        Style="{StaticResource DefaultWindowStyle}"
        Width="700" Height="400" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <inf:BlendMergedDictionary Source="pack://application:,,,/Resources/ApplicationResource.xaml"/>
                <inf:BlendMergedDictionary Source="/Luna.GUI;Component/Resources/ApplicationStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Path x:Name="arrow" Grid.Column="1" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Style="{DynamicResource OpenFileButtonStyle}" cal:Message.Attach="OpenFile"  Grid.Column="2" VerticalAlignment="Center" Margin="10 0 0 0"/>

                                        <ToggleButton Grid.Column="1" x:Name="HeaderSite"
                                          
									 Foreground="{TemplateBinding Foreground}" 
                                        Background="Transparent"
										HorizontalAlignment="Right"
										IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
								 Style="{StaticResource ExpanderUpHeaderStyle}" 
										/>
                                        <TextBlock VerticalAlignment="Center">
                                          <TextBlock.Text>
                                              <Binding>
                                                  <Binding.Path>
                                                   FilePath
                                                  </Binding.Path>
                                              </Binding>
                                          </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>

                                    <ContentPresenter x:Name="ExpandSite" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                    <Setter Property="IsExpanded" Value="True"/>
                                </DataTrigger>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Window.Resources>
    <Grid Margin="10">

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Expander Grid.Row="0">
            <Expander.Content>
                <ItemsControl ItemsSource="{Binding Errors}" DisplayMemberPath="Message" Foreground="Red" />
            </Expander.Content>
        </Expander>

        <Rectangle Grid.Row="1" VerticalAlignment="Center" Fill="DarkGray" StrokeThickness="1" Height="1" Stroke="{StaticResource DottedHorizontalSeparatorBrush}" StrokeDashArray="2 2" RenderOptions.EdgeMode="Aliased"/>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <ListBox BorderThickness="0" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding LoadedEntitiesView}"
                     ItemContainerStyle="{StaticResource DefaultListBoxItemStyle}" Style="{StaticResource CustomListBoxStyle}" Grid.Column="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <DockPanel>
                                <TextBlock Text="{Binding Entity.EventName}" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="(新) " x:Name="PART_NEW"/>
                                    <TextBlock Text="{Binding Entity}"/>
                                </StackPanel>                                
                            </DockPanel>
                            <StackPanel Orientation="Horizontal" x:Name="PART_Exist">
                                <TextBlock Text="(旧) "/>
                                <TextBlock Text="{Binding ConflictWith}"/>
                            </StackPanel>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ConflictWith}" Value="{x:Null}">
                                <Setter TargetName="PART_Exist" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="PART_NEW"  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True" Focusable="False" FocusVisualStyle="{x:Null}" Style="{DynamicResource GroupBoxExpander}">
                                                <Expander.Header>
                                                    <TextBlock Text="{Binding Name, Converter={StaticResource BooleanStringConverter}, ConverterParameter=冲突项;可汇入项}" Margin="5"  
                                                               VerticalAlignment="Center"/>                                                      
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter/>
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListBox.GroupStyle>
            </ListBox>
            
            <!--右下角说明列表-->
            <DockPanel Grid.Row="2" Grid.Column="1" >
                <UniformGrid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Center" Rows="1">
                    <TextBlock Text="{Binding SuccessInfo}" Foreground="Red" HorizontalAlignment="Left"/>
                    <Button Style="{StaticResource BlueButtonStyle}" HorizontalAlignment="Right"  Content="Import" VerticalAlignment="Center" Width="50" cal:Message.Attach="Save"/>
                </UniformGrid>
                <UniformGrid Columns="1" VerticalAlignment="Top">
                <UniformGrid.Resources>
                    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBoxStyle}">
                        <Setter Property="Margin" Value="0 5"/>
                        <Setter Property="Width" Value="200" />
                    </Style>
                </UniformGrid.Resources>
                <CheckBox IsChecked="{Binding OverridExistData}" Content="Overrid Exist" IsEnabled="{Binding HasConflict}"/>
                <CheckBox IsChecked="{Binding IgnoreInvalidExcelRows}" Content="Ignore Invalid ExcelRow" IsEnabled="{Binding HasErrors}"/>                  
            </UniformGrid>
            </DockPanel>          
        </Grid>
        <ListBox Grid.Row="3" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" ItemsSource="{Binding LoadedEntitiesView}" HorizontalAlignment="Left">          
            <ListBox.GroupStyle>                
                <GroupStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Foreground" Value="#FF525252"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="PART_Name" Foreground="{TemplateBinding Foreground}" Margin="0 0 5 0" VerticalAlignment="Center"/>
                                            <TextBlock x:Name="PART_Count" Foreground="{TemplateBinding Foreground}" Margin="0 0 10 0" VerticalAlignment="Center" FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                        </StackPanel>

                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Name}" Value="True">
                                                <Setter TargetName="PART_Name" Property="Text" Value="可汇入"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Name}" Value="False">
                                                <Setter TargetName="PART_Name" Property="Text" Value="冲突"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
        </ListBox>
    </Grid>
</Window>
